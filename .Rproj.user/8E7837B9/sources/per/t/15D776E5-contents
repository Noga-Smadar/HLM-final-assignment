# HLM final assignment
# By Noga Smadar, sep. 2025

# Loading Librares

library(tidyverse)
library(datawizard)
library(lmerTest)
library(performance)
library(parameters)
library(ggplot2)
library(lme4)
library(ggeffects) 
library(emmeans)
library(sjPlot)


## Preparing the data -

data <- read.csv("./IAPS_symp_long.csv")

head(data)

data <- data |>
  select(ID, stimulus_code, distance, stimulus_valence, OCI) |>
  rename(subject = ID,
         stim = stimulus_code,
         val_cat = stimulus_valence,
         OC = OCI) |>
  mutate(
    OC_c = OC - mean(OC),
    subject = factor(subject),
    stim = factor(stim),
    val_cat = factor(val_cat, levels = c("Negative", "Neutral", "Positive"))
  )

head(data)

# Making sure each stimulus appears once for each and every subject
all(data |> count(stim) |> pull(n) == 60)


# We will now build the model step by step.

## Random intercepts model -
mod_rndm.intr <- lmer(distance ~ 1 + (1| subject) + (1|stim), 
                      data = data)

ranova(mod_rndm.intr)


model_parameters(mod_rndm.intr, ci_method = "S")

# Calculate unconditional ICC
icc(mod_rndm.intr, by_group = TRUE)


## Adding a fixed effect for OC symptoms -
mod_fixef.OC <- lmer(distance ~ OC + (1| subject) + (1|stim), 
                     data = data)


# Model comparison
anova(mod_rndm.intr, mod_fixef.OC, refit = TRUE)

# Cheking parameters
model_parameters(mod_fixef.OC, ci_method = "s")

# How much BP variance did the effect of OC explain?
VarCorr(mod_rndm.intr) #  ID (Intercept) = 0.30552 
VarCorr(mod_fixef.OC)   # ID (Intercept) = 0.30213 

1 - (0.30213/0.30552)^2 # Pseudo R2 =  0.0222

## Adding a random effect for OC -
mod_rndm.OC <- lmer(distance ~ OC + (1| subject) + (OC|stim), 
                    data = data)

# Comparing the models 
anova(mod_fixef.OC, mod_rndm.OC, refit = FALSE)

# Checking parameters
model_parameters(mod_rndm.OC, ci_method = "s")


## Adding fixed effects for the valence categories -
mod_fixef.val <- lmer(distance ~ OC + val_cat + (1| subject) + (OC|stim), 
                      data = data)

# Checking parameters
model_parameters(mod_fixef.val, ci_method = "S")

# Calculating Pseudo R^2
VarCorr(mod_rndm.OC)
VarCorr(mod_fixef.val)

1 - (0.30449012/0.28066553)^2 # = -0.17
# Negative Pseudo R^2 - a shrinkage artifact?


## Adding random effects for the valence categories -
mod_rndm.val <- lmer(distance ~ OC + val_cat + (val_cat| subject) + (OC|stim), 
                     data = data)

# Checking parameters
model_parameters(mod_rndm.val, ci_method = "S")

# Comparing to previous models
anova(mod_fixef.val, mod_rndm.val, refit = FALSE)
anova(mod_rndm.OC, mod_rndm.val, refit = TRUE)

# Comparing marginal R^2 with and without valence category
r2_nakagawa(mod_rndm.OC) # 0.005
r2_nakagawa(mod_rndm.val) # 0.013


## Adding the interaction effect to reach the final model - 
mod_full <- lmer(distance ~ OC*val_cat +
                   (val_cat | subject) + (OC | stim), 
                 data = data)

# Checking parameters
model_parameters(mod_full, ci_method = "S")

# How much of the variance in subjects' effects of valence is explained by OC?
# Calculating psd-r2
VarCorr(mod_rndm.val)
VarCorr(mod_full)

1 - (0.28981295/0.28594497)^2 # Negative result, likely a shrinkage artifact.
1 - (0.34929419/0.35734166)^2 # = 0.04 

# Comparing to the previous model
anova(mod_rndm.val, mod_full, refit = TRUE)

# Checking marginal R^2
r2_nakagawa(mod_full)


## Creating visualisations for the final paper -

# Plotting the full model
preds <- ggpredict(mod_full, terms = c("OC", "val_cat"))

ggplot(preds, aes(x = x, y = predicted, color = group)) +
  geom_line(linewidth = 1.2) +
  geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.2, color = NA) +
  labs(
    x = "OC",
    y = "Distance",
    color = "Valence Category",
    fill = "Valence Category",
  ) +
  theme_minimal(base_size = 14)

# Creating a table for the main models
tab_model(mod_rndm.OC, mod_rndm.val, mod_full,
          show.se = TRUE,
          digits = 3, 
          dv.labels = c("OC Model", "OC and Valence Category Model", "Final Model"))
